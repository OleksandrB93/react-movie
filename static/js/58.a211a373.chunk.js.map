{"version":3,"file":"static/js/58.a211a373.chunk.js","mappings":"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","sources":["../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","/**\n * Specifically match against false here as incomplete versions of\n * PointerEvents in very old browser might have it set as undefined.\n */\nconst isPrimaryPointer = (event) => event.isPrimary !== false;\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.1.9\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate({ ...options, autoplay: false });\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        const animation = animate(options);\n        return () => animation.stop();\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.1.9\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.1.9 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["toString","substring","SVG","_a","animateBegin","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","gradientDirection","uniqueKey","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","React.createElement","role","id","React.isValidElement","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","rtl","speed","style","title","interval","animate","props","fixedId","idClip","idGradient","attributeName","values","repeatCount","begin","defaultProps","ContentLoader","Svg","__assign","Facebook","uid","ReactContentLoaderFacebook","viewBox","random","rx","cx","cy","r","ReactContentLoaderInstagram","ry","ReactContentLoaderCode","ReactContentLoaderListStyle","ReactContentLoaderBulletList","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","blockInitialAnimation","initial","render","animationState","animateChanges","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","isMouseEvent","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","window","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}