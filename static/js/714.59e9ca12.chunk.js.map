{"version":3,"file":"static/js/714.59e9ca12.chunk.js","mappings":"qSAGAA,EAAAA,GAAAA,SAAAA,QAAyBC,EAAAA,GACzBD,EAAAA,GAAAA,SAAAA,OAAwB,CACtBE,QAASC,EAAAA,GACTC,SAAU,SAQL,IAAMC,EAAe,mCAAG,oGACNL,EAAAA,GAAAA,IAAA,uBADM,cACvBM,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKfC,EAAW,mCAAG,WAAOC,GAAP,uFACFV,EAAAA,GAAAA,IAAA,8BAAiCU,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAIXG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,IADd,cACvBN,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAMfM,EAAY,mCAAG,WAAMD,GAAN,uFACHZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADG,cACpBN,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD,gFChCfQ,E,QAAkBC,EAAAA,IAAH,4K,SCAfC,EAAS,kBACtB,SAACF,EAAD,WACA,SAAC,KAAD,CACIG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,aAPQ,C,iLCATC,EAAeP,EAAAA,EAAAA,IAAH,wHAIH,qBAAGQ,MAAkBC,OAAOC,SAA5B,IAITC,EAAWX,EAAAA,EAAAA,GAAH,4GAQRY,EAAWZ,EAAAA,EAAAA,IAAH,8D,GAKCA,EAAAA,EAAAA,IAAF,yC,kBChBL,SAASa,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOjB,EAAP,KAAakB,EAAb,KACQpB,GAAYqB,EAAAA,EAAAA,MAAZrB,QACR,GAAkCmB,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBtB,EAAAA,EAAAA,IAAaD,GAHtC,OAGUyB,EAHV,OAIIL,EAAQK,GAJZ,gDAMIC,QAAQC,IAAR,MANJ,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAAC5B,IAEgB,IAAhBE,EAAK2B,OACA,qDAIP,SAACjB,EAAD,UACGU,GACC,SAAChB,EAAA,EAAD,IAEAJ,EAAK4B,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GACzC,OACE,UAAClB,EAAD,YACE,gBACEmB,IACEJ,EAAY,UACLK,EAAAA,IADK,OACQL,GAChB,wEAENM,IAAI,GACJ7B,MAAM,SAER,UAACS,EAAD,YACE,uBAAIe,KACJ,uCAAeC,UAZJC,EAgBlB,KAIR,C,gIC1DD,IAAM3C,EAAO,mCACPF,EAAW,+BACX+C,EAAa,kCACbE,EAAe,sC","sources":["api/api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieCast/MovieCast.styled.jsx","components/MovieDetails/MovieCast/MovieCast.jsx","constants/constants.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_KEY, BASE_URL } from \"constants/constants\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: \"en-US\",\r\n};\r\n\r\n// export const fetchSwiperMovie = async () => {\r\n//   const response = await axios.get(`/trending/movie/week`);\r\n//   return response.data.results;\r\n// };\r\n\r\nexport const fetchTrendMovie = async () => {\r\n  const response = await axios.get(`/trending/movie/day`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const searchMovie = async (query) => {\r\n  const response = await axios.get(`/search/movie?query=${query}`);\r\n  return response.data.results;\r\n};\r\nexport const getMovieDetails = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}`);\r\n  return response.data;\r\n};\r\n\r\n\r\nexport const getMovieCast = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getMovieReviews = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}/reviews`);\r\n  return response.data.results;\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const LoaderContainer = styled.div`\r\n  width: 120px;\r\n  height: 120px;\r\n/* margin: 0 auto; */\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-30%,-50%);\r\n  \r\n`;\r\n","import { Bars } from \"react-loader-spinner\";\r\nimport { LoaderContainer } from \"./Loader.styled\";\r\nexport const Loader = () => (\r\n<LoaderContainer>\r\n<Bars\r\n    height=\"80\"\r\n    width=\"80\"\r\n    radius=\"9\"\r\n    color=\"#14C6B3\"\r\n    ariaLabel=\"loading\"\r\n  />\r\n</LoaderContainer>\r\n);\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MovieCastBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  background-color: ${({ theme }) => theme.colors.bgPrimary};\r\n  \r\n`;\r\n\r\nexport const CastItem = styled.li`\r\n  width: 200px;\r\n\r\n  margin: 10px;\r\n  list-style: none;\r\n  background-color: gray;\r\n`;\r\n\r\nexport const CastInfo = styled.div`\r\n  padding: 5px 8px;\r\n  color: black;\r\n`;\r\n\r\nexport const CastImg= styled.img`\r\n  width: 200px;\r\n`","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieCast } from \"api/api\";\r\nimport { URL_POSTER } from \"constants/constants\";\r\nimport { MovieCastBox, CastItem, CastInfo } from \"./MovieCast.styled\";\r\nimport { Loader } from \"components/Loader/Loader\";\r\n\r\nexport default function MovieCast() {\r\n  const [cast, setCast] = useState([]);\r\n  const { movieId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getMovieId() {\r\n      try {\r\n        setIsLoading(true);\r\n        const idResp = await getMovieCast(movieId);\r\n        setCast(idResp);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    getMovieId();\r\n  }, [movieId]);\r\n\r\n  if (cast.length === 0) {\r\n    return \"We don't have any cast information on this movie.\";\r\n  }\r\n\r\n  return (\r\n    <MovieCastBox>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        cast.map(({ profile_path, name, character, id }) => {\r\n          return (\r\n            <CastItem key={id}>\r\n              <img\r\n                src={\r\n                  profile_path\r\n                    ? `${URL_POSTER}${profile_path}`\r\n                    : \"https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png\"\r\n                }\r\n                alt=\"\"\r\n                width=\"200\"\r\n              />\r\n              <CastInfo>\r\n                <p>{name}</p>\r\n                <p>Character: {character}</p>\r\n              </CastInfo>\r\n            </CastItem>\r\n          );\r\n        })\r\n      )}\r\n    </MovieCastBox>\r\n  );\r\n}\r\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst URL_POSTER = \"https://image.tmdb.org/t/p/w500\";\r\nconst URL_BACKDROP = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP };\r\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","LoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","MovieCastBox","theme","colors","bgPrimary","CastItem","CastInfo","MovieCast","useState","setCast","useParams","isLoading","setIsLoading","useEffect","idResp","console","log","getMovieId","length","map","profile_path","name","character","id","src","URL_POSTER","alt","URL_BACKDROP"],"sourceRoot":""}