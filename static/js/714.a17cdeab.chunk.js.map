{"version":3,"file":"static/js/714.a17cdeab.chunk.js","mappings":"6TAGAA,EAAAA,GAAAA,SAAAA,QAAyBC,EAAAA,GACzBD,EAAAA,GAAAA,SAAAA,OAAwB,CACtBE,QAASC,EAAAA,GACTC,SAAU,SAGL,IAAMC,EAAe,mCAAG,oGACNL,EAAAA,GAAAA,IAAA,uBADM,cACvBM,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKfC,EAAW,mCAAG,WAAMC,GAAN,uFACFV,EAAAA,GAAAA,IAAA,8BAAiCU,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAIXG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,IADd,cACvBN,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAY,mCAAG,WAAMD,GAAN,uFACHZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADG,cACpBN,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfQ,EAAe,mCAAG,WAAMJ,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,YADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD,gFC/BfS,E,QAAkBC,EAAAA,IAAH,4K,SCAfC,EAAS,kBACtB,SAACF,EAAD,WACA,SAAC,KAAD,CACIG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,aAPQ,C,iLCATC,EAAeP,EAAAA,EAAAA,IAAH,wHAIH,qBAAGQ,MAAkBC,OAAOC,SAA5B,IAITC,EAAWX,EAAAA,EAAAA,GAAH,4GAQRY,EAAWZ,EAAAA,EAAAA,IAAH,8D,GAKCA,EAAAA,EAAAA,IAAF,yC,kBChBL,SAASa,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOlB,EAAP,KAAamB,EAAb,KACQrB,GAAYsB,EAAAA,EAAAA,MAAZtB,QACR,GAAkCoB,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBvB,EAAAA,EAAAA,IAAaD,GAHtC,OAGU0B,EAHV,OAIIL,EAAQK,GAJZ,gDAMIC,QAAQC,IAAR,MANJ,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAAC7B,IAEgB,IAAhBE,EAAK4B,OACA,qDAIP,SAACjB,EAAD,UACGU,GACC,SAAChB,EAAA,EAAD,IAEAL,EAAK6B,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GACzC,OACE,UAAClB,EAAD,YACE,gBACEmB,IACEJ,EAAY,UACLK,EAAAA,IADK,OACQL,GAChB,wEAENM,IAAI,GACJ7B,MAAM,SAER,UAACS,EAAD,YACE,uBAAIe,KACJ,uCAAeC,UAZJC,EAgBlB,KAIR,C,gIC1DD,IAAM5C,EAAO,mCACPF,EAAW,+BACXgD,EAAa,kCACbE,EAAe,sC","sources":["api/api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieCast/MovieCast.styled.jsx","components/MovieDetails/MovieCast/MovieCast.jsx","constants/constants.js"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/constants';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendMovie = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovieTrailer = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/videos`);\n  return response.data.results;\n};\n","import styled from \"@emotion/styled\";\n\nexport const LoaderContainer = styled.div`\n  width: 120px;\n  height: 120px;\n/* margin: 0 auto; */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-30%,-50%);\n  \n`;\n","import { Bars } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\nexport const Loader = () => (\n<LoaderContainer>\n<Bars\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#14C6B3\"\n    ariaLabel=\"loading\"\n  />\n</LoaderContainer>\n);\n","import styled from \"@emotion/styled\";\n\nexport const MovieCastBox = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  background-color: ${({ theme }) => theme.colors.bgPrimary};\n  \n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n\n  margin: 10px;\n  list-style: none;\n  background-color: gray;\n`;\n\nexport const CastInfo = styled.div`\n  padding: 5px 8px;\n  color: black;\n`;\n\nexport const CastImg= styled.img`\n  width: 200px;\n`","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"api/api\";\nimport { URL_POSTER } from \"constants/constants\";\nimport { MovieCastBox, CastItem, CastInfo } from \"./MovieCast.styled\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport default function MovieCast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovieId() {\n      try {\n        setIsLoading(true);\n        const idResp = await getMovieCast(movieId);\n        setCast(idResp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    getMovieId();\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return \"We don't have any cast information on this movie.\";\n  }\n\n  return (\n    <MovieCastBox>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        cast.map(({ profile_path, name, character, id }) => {\n          return (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `${URL_POSTER}${profile_path}`\n                    : \"https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png\"\n                }\n                alt=\"\"\n                width=\"200\"\n              />\n              <CastInfo>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </CastInfo>\n            </CastItem>\n          );\n        })\n      )}\n    </MovieCastBox>\n  );\n}\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst URL_POSTER = \"https://image.tmdb.org/t/p/w500\";\nconst URL_BACKDROP = \"https://image.tmdb.org/t/p/original/\";\n\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP };\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getMovieTrailer","LoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","MovieCastBox","theme","colors","bgPrimary","CastItem","CastInfo","MovieCast","useState","setCast","useParams","isLoading","setIsLoading","useEffect","idResp","console","log","getMovieId","length","map","profile_path","name","character","id","src","URL_POSTER","alt","URL_BACKDROP"],"sourceRoot":""}