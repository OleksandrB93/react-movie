{"version":3,"file":"static/js/205.f6c12825.chunk.js","mappings":"6TAGAA,EAAAA,GAAAA,SAAAA,QAAyBC,EAAAA,GACzBD,EAAAA,GAAAA,SAAAA,OAAwB,CACtBE,QAASC,EAAAA,GACTC,SAAU,SAGL,IAAMC,EAAe,mCAAG,oGACNL,EAAAA,GAAAA,IAAA,uBADM,cACvBM,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKfC,EAAW,mCAAG,WAAMC,GAAN,uFACFV,EAAAA,GAAAA,IAAA,8BAAiCU,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAIXG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,IADd,cACvBN,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAY,mCAAG,WAAMD,GAAN,uFACHZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADG,cACpBN,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfQ,EAAe,mCAAG,WAAMJ,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,YADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD,gFC/BfS,E,QAAkBC,EAAAA,IAAH,4K,SCAfC,EAAS,kBACtB,SAACF,EAAD,WACA,SAAC,KAAD,CACIG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,aAPQ,C,yKCETC,GAFcP,EAAAA,EAAAA,GAAH,sBAEGA,EAAAA,EAAAA,GAAH,gMACF,qBAAGQ,MAAkBC,OAAOC,SAA5B,KASTC,EAAUX,EAAAA,EAAAA,EAAH,mFAET,qBAAGQ,MAAkBC,OAAOG,SAA5B,IAIEC,EAAiBb,EAAAA,EAAAA,EAAH,+C,UClBda,EAAiBb,EAAAA,EAAAA,EAAH,iI,SCCZ,SAASc,IACtB,OAAO,SAAC,EAAD,4BACR,CCGc,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQxB,GAAYyB,EAAAA,EAAAA,MAAZzB,QACR,GAAkCsB,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBxB,EAAAA,EAAAA,IAAgBH,GAHzC,OAGU6B,EAHV,OAIIL,EAAWK,GAJf,gDAMIC,QAAQC,IAAR,MANJ,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAAChC,KAGF,8BACsB,IAAnBuB,EAAQU,QACP,SAACb,EAAD,KAEA,wBACGM,GACC,SAACnB,EAAA,EAAD,IAEAgB,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACxB,EAAD,YACE,UAACI,EAAD,sBAAkBmB,MAClB,SAACjB,EAAD,UAAiBkB,MAFDF,EADR,OAWvB,C,gIChDD,IAAM5C,EAAO,mCACPF,EAAW,+BACXiD,EAAa,kCACbC,EAAe,sC","sources":["api/api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieReviews/MovieReviews.styled.jsx","components/MovieDetails/MovieReviews/NoReviews/NoReviews.styled.jsx","components/MovieDetails/MovieReviews/NoReviews/NoReviews.jsx","components/MovieDetails/MovieReviews/MovieReviews.jsx","constants/constants.js"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/constants';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendMovie = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovieTrailer = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/videos`);\n  return response.data.results;\n};\n","import styled from \"@emotion/styled\";\n\nexport const LoaderContainer = styled.div`\n  width: 120px;\n  height: 120px;\n/* margin: 0 auto; */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-30%,-50%);\n  \n`;\n","import { Bars } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\nexport const Loader = () => (\n<LoaderContainer>\n<Bars\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#14C6B3\"\n    ariaLabel=\"loading\"\n  />\n</LoaderContainer>\n);\n","import styled from \"@emotion/styled\";\n\nexport const ReviewsList = styled.ul``;\n\nexport const ReviewsItem = styled.li`\n  background-color: ${({ theme }) => theme.colors.bgPrimary};\n  color: #d4d4d4;\n  margin: 20px;\n  padding: 15px;\n  border: 2px solid gray;\n  border-radius: 7px;\n  box-shadow: 0px 0px 15px 2px gray;\n`;\n\nexport const AuthorP = styled.p`\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.clPrimary};\n  margin-bottom: 10px;\n`;\n\nexport const ReviewsContent = styled.p`\n  font-style: italic;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const ReviewsContent = styled.p`\n  text-align: center;\n  font-weight: bold;\n  font-size: 35px;\n  color: gray;\n  margin: 20px 0 30px;\n`;\n","import React from \"react\";\nimport { ReviewsContent } from \"./NoReviews.styled\";\n\nexport default function NoReviews() {\n  return <ReviewsContent>No reviews yet</ReviewsContent>;\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"api/api\";\nimport { ReviewsItem, AuthorP, ReviewsContent } from \"./MovieReviews.styled\";\nimport { Loader } from \"components/Loader/Loader\";\nimport NoReviews from \"./NoReviews/NoReviews\";\n\nexport default function MovieReviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovieId() {\n      try {\n        setIsLoading(true);\n        const idResp = await getMovieReviews(movieId);\n        setReviews(idResp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    getMovieId();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <NoReviews />\n      ) : (\n        <ul>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            reviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id}>\n                <AuthorP>Author: {author}</AuthorP>\n                <ReviewsContent>{content}</ReviewsContent>\n              </ReviewsItem>\n            ))\n          )}\n        </ul>\n      )}\n    </>\n  );\n}\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst URL_POSTER = \"https://image.tmdb.org/t/p/w500\";\nconst URL_BACKDROP = \"https://image.tmdb.org/t/p/original/\";\n\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP };\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getMovieTrailer","LoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","ReviewsItem","theme","colors","bgPrimary","AuthorP","clPrimary","ReviewsContent","NoReviews","MovieReviews","useState","reviews","setReviews","useParams","isLoading","setIsLoading","useEffect","idResp","console","log","getMovieId","length","map","id","author","content","URL_POSTER","URL_BACKDROP"],"sourceRoot":""}