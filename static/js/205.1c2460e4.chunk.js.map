{"version":3,"file":"static/js/205.1c2460e4.chunk.js","mappings":"6TAGAA,EAAAA,GAAAA,SAAAA,QAAyBC,EAAAA,GACzBD,EAAAA,GAAAA,SAAAA,OAAwB,CACtBE,QAASC,EAAAA,GACTC,SAAU,SAGL,IAAMC,EAAe,mCAAG,oGACNL,EAAAA,GAAAA,IAAA,uBADM,cACvBM,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKfC,EAAW,mCAAG,WAAMC,GAAN,uFACFV,EAAAA,GAAAA,IAAA,8BAAiCU,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAIXG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,IADd,cACvBN,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAY,mCAAG,WAAMD,GAAN,uFACHZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADG,cACpBN,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfQ,EAAe,mCAAG,WAAMJ,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,YADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD,gFC/BfS,E,QAAkBC,EAAAA,IAAH,4K,SCAfC,EAAS,kBACtB,SAACF,EAAD,WACA,SAAC,KAAD,CACIG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,aAPQ,C,yKCGTC,GAHcP,EAAAA,EAAAA,GAAH,wBAGGA,EAAAA,EAAAA,GAAH,4LACF,qBAAGQ,MAAkBC,OAAOC,SAA5B,IACX,qBAAGF,MAAkBC,OAAOE,SAA5B,KAQEC,EAAUZ,EAAAA,EAAAA,EAAH,mFAET,qBAAGQ,MAAkBC,OAAOI,QAA5B,IAIEC,EAAiBd,EAAAA,EAAAA,EAAH,+C,UCnBdc,EAAiBd,EAAAA,EAAAA,EAAH,iI,SCCZ,SAASe,IACtB,OAAO,SAAC,EAAD,4BACR,CCGc,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQzB,GAAY0B,EAAAA,EAAAA,MAAZ1B,QACR,GAAkCuB,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBzB,EAAAA,EAAAA,IAAgBH,GAHzC,OAGU8B,EAHV,OAIIL,EAAWK,GAJf,gDAMIC,QAAQC,IAAR,MANJ,yBAQIC,YAAW,WACTL,GAAa,EACd,GAAE,KAVP,6EADc,uBAAC,WAAD,wBAcdM,EACD,GAAE,CAAClC,KAGF,8BACsB,IAAnBwB,EAAQW,QACP,SAACd,EAAD,KAEA,wBACGM,GACC,SAACpB,EAAA,EAAD,IAEAiB,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAAC1B,EAAD,YACE,UAACK,EAAD,sBAAkBoB,MAClB,SAAClB,EAAD,UAAiBmB,MAFDF,EADR,OAWvB,C,wJClDD,IAAM9C,EAAO,mCACPF,EAAW,+BACXmD,EAAa,kCACbC,EAAe,uCACfC,EAAQ,iC","sources":["api/api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieReviews/MovieReviews.styled.jsx","components/MovieDetails/MovieReviews/NoReviews/NoReviews.styled.jsx","components/MovieDetails/MovieReviews/NoReviews/NoReviews.jsx","components/MovieDetails/MovieReviews/MovieReviews.jsx","constants/constants.js"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/constants';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendMovie = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovieTrailer = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/videos`);\n  return response.data.results;\n};\n\nexport const getMovieCompanyLogo = async company_id => {\n  const response = await axios.get(`/company/${company_id}/images`);\n  return response.data.results;\n};\n","import styled from \"@emotion/styled\";\n\nexport const LoaderContainer = styled.div`\n  width: 120px;\n  height: 120px;\n/* margin: 0 auto; */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-30%,-50%);\n  \n`;\n","import { Bars } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\nexport const Loader = () => (\n<LoaderContainer>\n<Bars\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#14C6B3\"\n    ariaLabel=\"loading\"\n  />\n</LoaderContainer>\n);\n","import styled from \"@emotion/styled\";\n\nexport const ReviewsList = styled.ul`\n`;\n\nexport const ReviewsItem = styled.li`\n  background-color: ${({ theme }) => theme.colors.bgPrimary};\n  color: ${({ theme }) => theme.colors.clPrimary};\n  margin: 20px;\n  padding: 15px;\n  border: 2px solid gray;\n  border-radius: 7px;\n  box-shadow: 0px 0px 15px 2px gray;\n`;\n\nexport const AuthorP = styled.p`\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.clAccent};\n  margin-bottom: 10px;\n`;\n\nexport const ReviewsContent = styled.p`\n  font-style: italic;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const ReviewsContent = styled.p`\n  text-align: center;\n  font-weight: bold;\n  font-size: 35px;\n  color: gray;\n  margin: 20px 0 30px;\n`;\n","import React from \"react\";\nimport { ReviewsContent } from \"./NoReviews.styled\";\n\nexport default function NoReviews() {\n  return <ReviewsContent>No reviews yet</ReviewsContent>;\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/api';\nimport { ReviewsItem, AuthorP, ReviewsContent } from './MovieReviews.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport NoReviews from './NoReviews/NoReviews';\n\nexport default function MovieReviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovieId() {\n      try {\n        setIsLoading(true);\n        const idResp = await getMovieReviews(movieId);\n        setReviews(idResp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1000);\n      }\n    }\n    getMovieId();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <NoReviews />\n      ) : (\n        <ul>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            reviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id}>\n                <AuthorP>Author: {author}</AuthorP>\n                <ReviewsContent>{content}</ReviewsContent>\n              </ReviewsItem>\n            ))\n          )}\n        </ul>\n      )}\n    </>\n  );\n}\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getMovieTrailer","LoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","ReviewsItem","theme","colors","bgPrimary","clPrimary","AuthorP","clAccent","ReviewsContent","NoReviews","MovieReviews","useState","reviews","setReviews","useParams","isLoading","setIsLoading","useEffect","idResp","console","log","setTimeout","getMovieId","length","map","id","author","content","URL_POSTER","URL_BACKDROP","LOGO_URL"],"sourceRoot":""}