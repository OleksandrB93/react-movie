{"version":3,"file":"static/js/284.ed98bb86.chunk.js","mappings":"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","sources":["api/api.js","components/Skeleton/Skeleton.jsx","constants/constants.js","pages/Movie/MovieGallery/MovieGallery.styled.jsx","pages/Movie/MovieGallery/MovieGallery.jsx","pages/Movie/MovieQuery/MovieQuery.styled.jsx","pages/Movie/MovieQuery/NoMovie/NoMovie.styled.jsx","pages/Movie/MovieQuery/NoMovie/NoMovie.jsx","pages/Movie/MovieQuery/MovieQuery.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/constants';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendMovie = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovieTrailer = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/videos`);\n  return response.data.results;\n};\n\nexport const getMovieCompanyLogo = async company_id => {\n  const response = await axios.get(`/company/${company_id}/images`);\n  return response.data.results;\n};\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nconst SkeletonHome = () => (\n  <div>\n    <ContentLoader\n      className=\"skeletonHome\"\n      speed={1}\n      width={250}\n      height={375}\n      viewBox=\"0 0 250 375\"\n      backgroundColor=\"#44577b\"\n      foregroundColor=\"#1c2434\"\n    >\n      <rect x=\"0\" y=\"0\" rx=\"6\" ry=\"6\" width=\"250\" height=\"375\" />\n      <rect x=\"89\" y=\"165\" rx=\"0\" ry=\"0\" width=\"1\" height=\"1\" />\n    </ContentLoader>\n  </div>\n);\n\nexport default SkeletonHome;\n\n\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n","import styled from \"@emotion/styled\";\n\nexport const MovieList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  align-content: start;\n  flex-wrap: wrap;\n`;\n\nexport const MovieItem = styled.li`\n  position: relative;\n  width: 250px;\n  height: 375px;\n\n  margin: 15px;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  transition: box-shadow 200ms ease-in-out, transform 400ms ease-in-out;\n  box-shadow: ${({ theme }) => theme.boxsh.boxsh};\n\n  :hover,\n  :focus-visible {\n    transform: scale(1.02);\n    box-shadow: ${({ theme }) => theme.boxsh.boxshpr};\n  }\n\n  :hover p {\n    opacity: 1;\n    transform: translateY(0%) scale(1);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  width: 250px;\n  height: 375px;\n\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.p`\n  transform: translateY(50%) scale(0.8);\n  transition: opacity 100ms ease-in-out, transform 100ms ease-in-out;\n  opacity: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 7px;\n\n  width: 94%;\n  height: 45px;\n  position: absolute;\n  bottom: 0;\n  border-radius: 5px;\n  border: 1px solid #14c6b3;\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n  background-color: #14c6b4a8;\n`;\n\n","import React from 'react';\nimport { useLocation, NavLink } from 'react-router-dom';\nimport { URL_POSTER } from 'constants/constants';\nimport SkeletonHome from 'components/Skeleton/Skeleton';\nimport {\n  MovieList,\n  MovieItem,\n  MovieImg,\n  MovieTitle,\n} from './MovieGallery.styled';\n\nexport default function MovieGallery({ movies, isLoading }) {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {isLoading\n        ? [...new Array(20)].map((_, index) => <SkeletonHome key={index} />)\n        : movies.map(({ id, original_title, poster_path, title }) => (\n          <MovieItem key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <MovieImg\n                src={\n                  poster_path ? `${URL_POSTER}${poster_path}` : `no image`\n                }\n                alt={title}\n                width={350}\n                height={525}\n              />\n              <div>\n                <MovieTitle>{original_title}</MovieTitle>\n              </div>\n            </NavLink>\n          </MovieItem>\n        ))}\n    </MovieList>\n  );\n}\n\n\n","import styled from \"@emotion/styled\";\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding-top: 100px;\n\n  :hover,\n  :focus button {\n    color: ${({ theme }) => theme.colors.clAccent};\n  }\n`;\n\nexport const Input = styled.input`\n  width: 500px;\n  border-radius: 25px;\n  border: 3px solid #14c6b3;\n  outline: none;\n  padding: 10px;\n  font-size: 18px;\n  text-align: center;\n\n  background-color: black;\n  color: ${({ theme }) => theme.colors.clAccent};\n  transition: width 300ms ease-in-out, border 400ms ease-in-out;\n\n  :hover,\n  :focus {\n    width: 500px;\n    border: 2px solid ${({ theme }) => theme.colors.clAccent};\n    border: 3px solid ${({ theme }) => theme.colors.clAccent};\n    color: ${({ theme }) => theme.colors.clAccent};\n  }\n`;\nexport const BtnContainer = styled.div`\n  /* background-color: ${({ theme }) => theme.colors.bgPrimary}; */\n`;\nexport const SearchIconBtn = styled.button`\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.clPrimary};\n`;\n\nexport const SkeltonBox = styled.div`\n  margin-top: 20px;\n\n  display: flex;\n  justify-content: center;\n  align-content: start;\n  flex-wrap: wrap;\n`;\n\nexport const BackgroundImgNoMovie = styled.div`\n  background-image:radial-gradient(circle, rgba(0,0,0,0) 0%, #003335cc 100%),\n  url(${props => props.movies.length === 0 ? ('https://www.pixelstalk.net/wp-content/uploads/images5/Cool-Batman-Wallpaper-Free-Download.jpg') : ('')});\n  width: 100%;\n  height:  ${props => props.movies.length ? ('100%') : ('100vh')};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-attachment: fixed; \n\n`\n\n// ","import styled from \"@emotion/styled\";\n\nexport const NoMovieContnet = styled.p`\n  position: absolute;\n  top:50%;\n  left:50%;\n  transform: translate(-50%,-50%);\n  z-index: 10;\n\n  text-align: center;\n  font-weight: bold;\n  font-size: 35px;\n  color: ${({ theme }) => theme.colors.clAccent};\n  margin: 20px 0 30px;\n\n  padding: 7px 15px;\n  border-radius: 15px;\n  text-shadow: 2px 2px 3px #9a7600;\n`;\n\n","import React from \"react\";\nimport { NoMovieContnet, } from \"./NoMovie.styled\";\n\nexport default function NoMovie() {\n  return <div>\n    <NoMovieContnet>There is no movies with that request...</NoMovieContnet>\n  </div>;\n}","import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchMovie } from \"api/api\";\nimport { FaSearch } from \"react-icons/fa\";\nimport {\n  SearchIconBtn,\n  Input,\n  Form,\n  BtnContainer,\n  SkeltonBox,\n  BackgroundImgNoMovie,\n} from \"./MovieQuery.styled\";\nimport MovieGallery from \"../MovieGallery/MovieGallery\";\nimport SkeletonHome from \"components/Skeleton/Skeleton\";\nimport NoMovie from \"./NoMovie/NoMovie\";\n\nexport default function Movie() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const movieSearch = searchParams.get(\"query\");\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    setSearchParams({ query: query });\n    setQuery(\"\");\n  };\n\n\n  useEffect(() => {\n    if (!movieSearch) return;\n\n    async function renderSearchMovies() {\n      try {\n        setIsLoading(true);\n        const moviesResp = await searchMovie(movieSearch);\n        setMovies(moviesResp);\n      } catch (error) {\n        console.log(\"Ooops, something went wrong\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    renderSearchMovies();\n  }, [movieSearch]);\n\n  return (\n    <BackgroundImgNoMovie movies={movies}>\n      <Form action=\"\" onSubmit={onFormSubmit}>\n        <label htmlFor=\"\">\n          <Input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n        </label>\n        <SearchIconBtn type=\"submit\">\n          <BtnContainer>\n            <FaSearch size={35} />\n          </BtnContainer>\n        </SearchIconBtn>\n      </Form>\n\n      {isLoading ? (\n        <SkeltonBox>\n          {[...new Array(20)].map((_, index) => (\n            <SkeletonHome key={index} />\n          ))}\n        </SkeltonBox>\n      ) : (\n        movies && <MovieGallery movies={movies} />\n      )}\n\n      {movies.length === 0 && <NoMovie />}\n    </BackgroundImgNoMovie>\n  );\n}\n\n\n\n\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getMovieTrailer","className","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","URL_POSTER","URL_BACKDROP","LOGO_URL","MovieList","styled","MovieItem","theme","boxsh","boxshpr","MovieImg","MovieTitle","MovieGallery","movies","isLoading","location","useLocation","Array","map","_","index","Skeleton","id","original_title","poster_path","title","to","state","from","src","alt","Form","colors","clAccent","Input","BtnContainer","bgPrimary","SearchIconBtn","clPrimary","SkeltonBox","BackgroundImgNoMovie","props","length","NoMovieContnet","NoMovie","Movie","useState","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","setIsLoading","movieSearch","get","useEffect","moviesResp","console","log","renderSearchMovies","action","onSubmit","e","preventDefault","htmlFor","type","name","value","onChange","currentTarget","toLowerCase","size"],"sourceRoot":""}