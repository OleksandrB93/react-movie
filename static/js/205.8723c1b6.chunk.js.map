{"version":3,"file":"static/js/205.8723c1b6.chunk.js","mappings":"qSAGAA,EAAAA,GAAAA,SAAAA,QAAyBC,EAAAA,GACzBD,EAAAA,GAAAA,SAAAA,OAAwB,CACtBE,QAASC,EAAAA,GACTC,SAAU,SAQL,IAAMC,EAAe,mCAAG,oGACNL,EAAAA,GAAAA,IAAA,uBADM,cACvBM,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKfC,EAAW,mCAAG,WAAOC,GAAP,uFACFV,EAAAA,GAAAA,IAAA,8BAAiCU,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAIXG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,IADd,cACvBN,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAMfM,EAAY,mCAAG,WAAMD,GAAN,uFACHZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADG,cACpBN,EADoB,yBAEnBA,EAASC,KAAKO,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBAAoBY,EAApB,aADM,cACvBN,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD,gFChCfQ,E,QAAkBC,EAAAA,IAAH,4K,SCAfC,EAAS,kBACtB,SAACF,EAAD,WACA,SAAC,KAAD,CACIG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,aAPQ,C,yKCETC,GAFcP,EAAAA,EAAAA,GAAH,sBAEGA,EAAAA,EAAAA,GAAH,gMACF,qBAAGQ,MAAkBC,OAAOC,SAA5B,KASTC,EAAUX,EAAAA,EAAAA,EAAH,mFAET,qBAAGQ,MAAkBC,OAAOG,SAA5B,IAIEC,EAAiBb,EAAAA,EAAAA,EAAH,+C,UClBda,EAAiBb,EAAAA,EAAAA,EAAH,iI,SCCZ,SAASc,IACtB,OAAO,SAAC,EAAD,4BACR,CCGc,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQvB,GAAYwB,EAAAA,EAAAA,MAAZxB,QACR,GAAkCqB,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBvB,EAAAA,EAAAA,IAAgBH,GAHzC,OAGU4B,EAHV,OAIIL,EAAWK,GAJf,gDAMIC,QAAQC,IAAR,MANJ,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAAC/B,KAGF,8BACsB,IAAnBsB,EAAQU,QACP,SAACb,EAAD,KAEA,wBACGM,GACC,SAACnB,EAAA,EAAD,IAEAgB,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACxB,EAAD,YACE,UAACI,EAAD,sBAAkBmB,MAClB,SAACjB,EAAD,UAAiBkB,MAFDF,EADR,OAWvB,C,gIChDD,IAAM3C,EAAO,mCACPF,EAAW,+BACXgD,EAAa,kCACbC,EAAe,sC","sources":["api/api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieReviews/MovieReviews.styled.jsx","components/MovieDetails/MovieReviews/NoReviews/NoReviews.styled.jsx","components/MovieDetails/MovieReviews/NoReviews/NoReviews.jsx","components/MovieDetails/MovieReviews/MovieReviews.jsx","constants/constants.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_KEY, BASE_URL } from \"constants/constants\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: \"en-US\",\r\n};\r\n\r\n// export const fetchSwiperMovie = async () => {\r\n//   const response = await axios.get(`/trending/movie/week`);\r\n//   return response.data.results;\r\n// };\r\n\r\nexport const fetchTrendMovie = async () => {\r\n  const response = await axios.get(`/trending/movie/day`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const searchMovie = async (query) => {\r\n  const response = await axios.get(`/search/movie?query=${query}`);\r\n  return response.data.results;\r\n};\r\nexport const getMovieDetails = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}`);\r\n  return response.data;\r\n};\r\n\r\n\r\nexport const getMovieCast = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getMovieReviews = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}/reviews`);\r\n  return response.data.results;\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const LoaderContainer = styled.div`\r\n  width: 120px;\r\n  height: 120px;\r\n/* margin: 0 auto; */\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-30%,-50%);\r\n  \r\n`;\r\n","import { Bars } from \"react-loader-spinner\";\r\nimport { LoaderContainer } from \"./Loader.styled\";\r\nexport const Loader = () => (\r\n<LoaderContainer>\r\n<Bars\r\n    height=\"80\"\r\n    width=\"80\"\r\n    radius=\"9\"\r\n    color=\"#14C6B3\"\r\n    ariaLabel=\"loading\"\r\n  />\r\n</LoaderContainer>\r\n);\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ReviewsList = styled.ul``;\r\n\r\nexport const ReviewsItem = styled.li`\r\n  background-color: ${({ theme }) => theme.colors.bgPrimary};\r\n  color: #d4d4d4;\r\n  margin: 20px;\r\n  padding: 15px;\r\n  border: 2px solid gray;\r\n  border-radius: 7px;\r\n  box-shadow: 0px 0px 15px 2px gray;\r\n`;\r\n\r\nexport const AuthorP = styled.p`\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.colors.clPrimary};\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ReviewsContent = styled.p`\r\n  font-style: italic;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ReviewsContent = styled.p`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 35px;\r\n  color: gray;\r\n  margin: 20px 0 30px;\r\n`;\r\n","import React from \"react\";\r\nimport { ReviewsContent } from \"./NoReviews.styled\";\r\n\r\nexport default function NoReviews() {\r\n  return <ReviewsContent>No reviews yet</ReviewsContent>;\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieReviews } from \"api/api\";\r\nimport { ReviewsItem, AuthorP, ReviewsContent } from \"./MovieReviews.styled\";\r\nimport { Loader } from \"components/Loader/Loader\";\r\nimport NoReviews from \"./NoReviews/NoReviews\";\r\n\r\nexport default function MovieReviews() {\r\n  const [reviews, setReviews] = useState([]);\r\n  const { movieId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getMovieId() {\r\n      try {\r\n        setIsLoading(true);\r\n        const idResp = await getMovieReviews(movieId);\r\n        setReviews(idResp);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    getMovieId();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {reviews.length === 0 ? (\r\n        <NoReviews />\r\n      ) : (\r\n        <ul>\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            reviews.map(({ id, author, content }) => (\r\n              <ReviewsItem key={id}>\r\n                <AuthorP>Author: {author}</AuthorP>\r\n                <ReviewsContent>{content}</ReviewsContent>\r\n              </ReviewsItem>\r\n            ))\r\n          )}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst URL_POSTER = \"https://image.tmdb.org/t/p/w500\";\r\nconst URL_BACKDROP = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP };\r\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","LoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","ReviewsItem","theme","colors","bgPrimary","AuthorP","clPrimary","ReviewsContent","NoReviews","MovieReviews","useState","reviews","setReviews","useParams","isLoading","setIsLoading","useEffect","idResp","console","log","getMovieId","length","map","id","author","content","URL_POSTER","URL_BACKDROP"],"sourceRoot":""}