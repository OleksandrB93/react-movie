{"version":3,"file":"static/js/703.c34d6b91.chunk.js","mappings":"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","sources":["api/api.js","components/MovieDetails/MovieInfo/MovieInfo.styled.jsx","components/MovieDetails/MovieInfo/MovieInfo.jsx","components/Skeleton/SkeletonInfo.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MoiveDetails.jsx","constants/constants.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_KEY, BASE_URL } from \"constants/constants\";\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: \"en-US\",\n};\n\n// export const fetchSwiperMovie = async () => {\n//   const response = await axios.get(`/trending/movie/week`);\n//   return response.data.results;\n// };\n\nexport const fetchTrendMovie = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const searchMovie = async (query) => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};","import styled from \"@emotion/styled\";\nimport { URL_BACKDROP } from \"constants/constants\";\n\nexport const MovieInfoBox = styled.div`\n  width: 100%;\n  height: 100%;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  background-image: linear-gradient(\n      to right,\n      rgba(58, 58, 58, 0.5),\n      rgba(47, 48, 58, 0.5)\n    ),\n    ${(props) => `url(${URL_BACKDROP}${props.backdrop.backdrop_path})`};\n\n  background-size: cover;\n  background-position: top;\n  background-repeat: no-repeat;\n  object-fit: cover;\n  box-shadow: inset 0px 0px 523px 50px rgba(110, 109, 109, 0.35);\n`;\n\nexport const Poster = styled.img`\n  border-radius: 5px;\n  margin-bottom: 20px;\n  margin-left: 40px;\n  box-shadow: rgba(0, 0, 0, 0.72) 0px 5px 15px;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  backdrop-filter: invert(20%);\n  color: ${({ theme }) => theme.colors.clAccent};\n`;\n\nexport const Score = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  margin-left: 20px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  padding:5px 20px;\n\n  backdrop-filter: invert(20%);\n  color: #e3c373;\n`;\n\nexport const OverviewTitle = styled.p`\n  font-size: 25px;\n  font-weight: 700;\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  backdrop-filter: invert(20%);\n  color: ${({ theme }) => theme.colors.bgPrimary};\n`;\n\nexport const OverviewContent = styled.p`\n  font-size: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  backdrop-filter: invert(20%);\n  color: ${({ theme }) => theme.colors.bgPrimary};\n`;\n\nexport const GenresTitle = styled.p`\n  font-size: 25px;\n  font-weight: 700;\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  backdrop-filter: invert(20%);\n  color: ${({ theme }) => theme.colors.bgPrimary};\n`;\n\nexport const GenresContent = styled.p`\n  font-size: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  backdrop-filter: invert(20%);\n  color: ${({ theme }) => theme.colors.bgPrimary};\n`;\n","import React from \"react\";\nimport { URL_POSTER } from \"constants/constants\";\nimport {\n  MovieInfoBox,\n  Poster,\n  Title,\n  Score,\n  OverviewTitle,\n  OverviewContent,\n  GenresTitle,\n  GenresContent,\n} from \"./MovieInfo.styled\";\n\nexport default function MovieInfo({ info }) {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = info;\n\n  const getYear = () => new Date(`${release_date}`).getFullYear();\n  const getScore = () => Math.round(`${vote_average}` * 10);\n\n  return (\n    <MovieInfoBox backdrop={info}>\n      <Poster\n        src={poster_path ? `${URL_POSTER}${poster_path}` : \"no image\"}\n        alt={original_title}\n        width=\"300\"\n        height=\"450\"\n      />\n      <div>\n        <Title>\n          {original_title} ({getYear()})\n        </Title>\n        <Score>Use Score : {getScore()}%</Score>\n        <OverviewTitle>Overview</OverviewTitle>\n        <OverviewContent>{overview}</OverviewContent>\n        <GenresTitle>Genres</GenresTitle>\n        <GenresContent>\n          {genres.map((genre) => genre.name).join(\", \")}\n        </GenresContent>\n      </div>\n    </MovieInfoBox>\n  );\n}\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst SkeletonInfo = (props) => (\n    <ContentLoader \n      speed={1}\n      width={1300}\n      height={900}\n      viewBox=\"0 0 1300 900\"\n      backgroundColor=\"#44577b\"\n      foregroundColor=\"#1c2434\"\n      {...props}\n    >\n      <rect x=\"40\" y=\"0\" rx=\"6\" ry=\"6\" width=\"300\" height=\"450\" /> \n      <rect x=\"40\" y=\"165\" rx=\"0\" ry=\"0\" width=\"1\" height=\"1\" /> \n      <rect x=\"40\" y=\"500\" rx=\"0\" ry=\"0\" width=\"400\" height=\"40\" /> \n      <rect x=\"40\" y=\"560\" rx=\"0\" ry=\"0\" width=\"177\" height=\"20\" /> \n      <rect x=\"40\" y=\"620\" rx=\"0\" ry=\"0\" width=\"1200\" height=\"100\" /> \n      <rect x=\"40\" y=\"730\" rx=\"0\" ry=\"0\" width=\"300\" height=\"40\" />\n    </ContentLoader>\n  )\nexport default SkeletonInfo\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const BackDiv = styled.div`\n  padding-left: 45px;\n\n  &.active {\n    color: ${({ theme }) => theme.colors.clAccent};\n    box-shadow: ${({ theme }) => theme.boxsh.boxsh};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${({ theme }) => theme.colors.clAccent};\n    transform: translateY(-2px);\n    box-shadow: ${({ theme }) => theme.boxsh.boxsh};\n  }\n`;\n\nexport const GoBack = styled(NavLink)`\n  color: ${({ theme }) => theme.colors.clPrimary};\n  border-radius: 10px;\n  transition: ${({ theme }) => theme.transition.tr};\n`;\n\nexport const MDetContainer = styled.div`\n  padding-top: 76px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 25px;\n  margin-top: 10px;\n\n  color: ${({ theme }) => theme.colors.clPrimary};\n`;\n\nexport const NavlinkComtainer = styled.div`\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const CastReviewsList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  list-style: none;\n`;\n\nexport const CastReviewsItem = styled(NavLink)`\n  padding: 7px 10px;\n  margin-right: 17px;\n  text-decoration: none;\n  font-weight: bold;\n  font-size: 20px;\n\n  color: ${({ theme }) => theme.colors.clPrimary};\n  border-radius: 10px;\n  transition: ${({ theme }) => theme.transition.tr};\n\n  &.active {\n    color: ${({ theme }) => theme.colors.clAccent};\n    box-shadow: ${({ theme }) => theme.boxsh.boxsh};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${({ theme }) => theme.colors.clAccent};\n    transform: translateY(-2px);\n    box-shadow: ${({ theme }) => theme.boxsh.boxsh};\n  }\n`;\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { getMovieDetails } from \"api/api\";\nimport { HiBackspace } from \"react-icons/hi\";\nimport MovieInfo from \"./MovieInfo/MovieInfo\";\nimport SkeletonInfo from \"../Skeleton/SkeletonInfo\";\nimport {\n  MDetContainer,\n  AdditionalInfo,\n  CastReviewsList,\n  CastReviewsItem,\n  NavlinkComtainer,\n  GoBack,\n  BackDiv,\n} from \"./MovieDetails.styled\";\n\nexport default function MoiveDetails() {\n  const [movie, setMovie] = useState(0);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovieId() {\n      try {\n        setIsLoading(true);\n        const idResp = await getMovieDetails(movieId);\n        setMovie(idResp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setTimeout(() => setIsLoading(false), 1000);\n      }\n    }\n    getMovieId();\n  }, [movieId]);\n\n  const from = location.state?.from ?? \"/\";\n\n  return (\n    <>\n      {movie && (\n        <MDetContainer>\n          <GoBack to={from}>\n            <BackDiv>\n              <HiBackspace size={35} />\n            </BackDiv>\n          </GoBack>\n          {isLoading ? <SkeletonInfo /> : <MovieInfo info={movie}></MovieInfo>}\n          <div>\n            <AdditionalInfo> Additional information</AdditionalInfo>\n            <NavlinkComtainer>\n              <CastReviewsList>\n                <li>\n                  <CastReviewsItem to=\"cast\" state={{ from }}>\n                    Cast\n                  </CastReviewsItem>\n                </li>\n                <li>\n                  <CastReviewsItem to=\"reviews\" state={{ from }}>\n                    Reviews\n                  </CastReviewsItem>\n                </li>\n              </CastReviewsList>\n            </NavlinkComtainer>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </MDetContainer>\n      )}\n    </>\n  );\n}\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst URL_POSTER = \"https://image.tmdb.org/t/p/w500\";\nconst URL_BACKDROP = \"https://image.tmdb.org/t/p/original/\";\n\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP };\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","MovieInfoBox","styled","props","URL_BACKDROP","backdrop","backdrop_path","Poster","Title","theme","colors","clAccent","Score","OverviewTitle","bgPrimary","OverviewContent","GenresTitle","GenresContent","MovieInfo","info","poster_path","original_title","release_date","vote_average","overview","genres","src","URL_POSTER","alt","width","height","Date","getFullYear","Math","round","map","genre","name","join","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","BackDiv","boxsh","GoBack","NavLink","clPrimary","transition","tr","MDetContainer","AdditionalInfo","NavlinkComtainer","CastReviewsList","CastReviewsItem","MoiveDetails","useState","movie","setMovie","useParams","location","useLocation","isLoading","setIsLoading","useEffect","idResp","console","log","setTimeout","getMovieId","from","state","to","size","Suspense","fallback"],"sourceRoot":""}