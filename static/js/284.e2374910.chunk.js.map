{"version":3,"file":"static/js/284.e2374910.chunk.js","mappings":"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","sources":["api/api.js","components/Skeleton/Skeleton.jsx","constants/constants.js","pages/Movie/MovieGallery/MovieGallery.styled.jsx","pages/Movie/MovieGallery/MovieGallery.jsx","pages/Movie/MovieQuery/MovieQuery.styled.jsx","pages/Movie/MovieQuery/NoMovie/NoMovie.styled.jsx","pages/Movie/MovieQuery/NoMovie/NoMovie.jsx","pages/Movie/MovieQuery/MovieQuery.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { API_KEY, BASE_URL } from 'constants/constants';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: 'en-US',\r\n};\r\n\r\nexport const fetchTrendMovie = async () => {\r\n  const response = await axios.get(`/trending/movie/day`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const searchMovie = async query => {\r\n  const response = await axios.get(`/search/movie?query=${query}`);\r\n  return response.data.results;\r\n};\r\nexport const getMovieDetails = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getMovieCast = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getMovieReviews = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}/reviews`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getMovieTrailer = async movieId => {\r\n  const response = await axios.get(`/movie/${movieId}/videos`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getMovieCompanyLogo = async company_id => {\r\n  const response = await axios.get(`/company/${company_id}/images`);\r\n  return response.data.results;\r\n};\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nconst SkeletonHome = () => (\r\n  <div>\r\n    <ContentLoader\r\n      className=\"skeletonHome\"\r\n      speed={1}\r\n      width={250}\r\n      height={375}\r\n      viewBox=\"0 0 250 375\"\r\n      backgroundColor=\"#44577b\"\r\n      foregroundColor=\"#1c2434\"\r\n    >\r\n      <rect x=\"0\" y=\"0\" rx=\"6\" ry=\"6\" width=\"250\" height=\"375\" />\r\n      <rect x=\"89\" y=\"165\" rx=\"0\" ry=\"0\" width=\"1\" height=\"1\" />\r\n    </ContentLoader>\r\n  </div>\r\n);\r\n\r\nexport default SkeletonHome;\r\n\r\n\r\n","const API_KEY = `74cf07cbcff58397c32fe332f07646fa`;\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\r\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\r\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\r\n\r\nexport { API_KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MovieList = styled.ul`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: start;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const MovieItem = styled.li`\r\n  position: relative;\r\n  width: 250px;\r\n  height: 375px;\r\n\r\n  margin: 15px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  transition: box-shadow 200ms ease-in-out, transform 400ms ease-in-out;\r\n  box-shadow: ${({ theme }) => theme.boxsh.boxsh};\r\n\r\n  :hover,\r\n  :focus-visible {\r\n    transform: scale(1.02);\r\n    box-shadow: ${({ theme }) => theme.boxsh.boxshpr};\r\n  }\r\n\r\n  :hover p {\r\n    opacity: 1;\r\n    transform: translateY(0%) scale(1);\r\n  }\r\n`;\r\n\r\nexport const MovieImg = styled.img`\r\n  width: 250px;\r\n  height: 375px;\r\n\r\n  border-radius: 5px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n  transform: translateY(50%) scale(0.8);\r\n  transition: opacity 100ms ease-in-out, transform 100ms ease-in-out;\r\n  opacity: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 7px;\r\n\r\n  width: 94%;\r\n  height: 45px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  border-radius: 5px;\r\n  border: 1px solid #14c6b3;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: black;\r\n  background-color: #14c6b4a8;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useLocation, NavLink } from 'react-router-dom';\r\nimport { URL_POSTER } from 'constants/constants';\r\nimport SkeletonHome from 'components/Skeleton/Skeleton';\r\nimport {\r\n  MovieList,\r\n  MovieItem,\r\n  MovieImg,\r\n  MovieTitle,\r\n} from './MovieGallery.styled';\r\n\r\nexport default function MovieGallery({ movies, isLoading }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <MovieList>\r\n      {isLoading\r\n        ? [...new Array(20)].map((_, index) => <SkeletonHome key={index} />)\r\n        : movies.map(({ id, original_title, poster_path, title }) => (\r\n            <MovieItem key={id}>\r\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\r\n                  <MovieImg\r\n                    src={\r\n                      poster_path ? `${URL_POSTER}${poster_path}` : `no image`\r\n                    }\r\n                    alt={title}\r\n                    width={350}\r\n                    height={525}\r\n                  />\r\n\r\n                <div>\r\n                  <MovieTitle>{original_title}</MovieTitle>\r\n                </div>\r\n              </NavLink>\r\n            </MovieItem>\r\n          ))}\r\n    </MovieList>\r\n  );\r\n}\r\n\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 100px;\r\n\r\n  :hover,\r\n  :focus button {\r\n    color: ${({ theme }) => theme.colors.clAccent};\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 500px;\r\n  border-radius: 25px;\r\n  border: 3px solid #14c6b3;\r\n  outline: none;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n\r\n  background-color: black;\r\n  color: ${({ theme }) => theme.colors.clAccent};\r\n  transition: width 300ms ease-in-out, border 400ms ease-in-out;\r\n\r\n  :hover,\r\n  :focus {\r\n    width: 500px;\r\n    border: 2px solid ${({ theme }) => theme.colors.clAccent};\r\n    border: 3px solid ${({ theme }) => theme.colors.clAccent};\r\n    color: ${({ theme }) => theme.colors.clAccent};\r\n  }\r\n`;\r\nexport const BtnContainer = styled.div`\r\n  /* background-color: ${({ theme }) => theme.colors.bgPrimary}; */\r\n`;\r\nexport const SearchIconBtn = styled.button`\r\n  border: none;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.colors.clPrimary};\r\n`;\r\n\r\nexport const SkeltonBox = styled.div`\r\n  margin-top: 20px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: start;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const BackgroundImgNoMovie = styled.div`\r\n  background-image:radial-gradient(circle, rgba(0,0,0,0) 0%, #351a00cc 100%),\r\n  url('https://ktla.com/wp-content/uploads/sites/4/2022/09/movie-theater-popcorn.jpg?w=876&h=493&crop=1');\r\n  width: 100%;\r\n  height:  ${props => props.movies.length ? ('100%') : ('100vh')};\r\n\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed; \r\n\r\n`\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const NoMovieContnet = styled.p`\r\n  position: absolute;\r\n  top:50%;\r\n  left:50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 10;\r\n\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 35px;\r\n  color: ${({ theme }) => theme.colors.clAccent};\r\n  margin: 20px 0 30px;\r\n\r\n  padding: 7px 15px;\r\n  border-radius: 15px;\r\n  text-shadow: 2px 2px 3px #000000;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { NoMovieContnet, } from \"./NoMovie.styled\";\r\n\r\nexport default function NoMovie() {\r\n  return <div>\r\n    <NoMovieContnet>There is no movies with that request...</NoMovieContnet>\r\n  </div>;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { searchMovie } from \"api/api\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport {\r\n  SearchIconBtn,\r\n  Input,\r\n  Form,\r\n  BtnContainer,\r\n  SkeltonBox,\r\n  BackgroundImgNoMovie,\r\n} from \"./MovieQuery.styled\";\r\nimport MovieGallery from \"../MovieGallery/MovieGallery\";\r\nimport SkeletonHome from \"components/Skeleton/Skeleton\";\r\nimport NoMovie from \"./NoMovie/NoMovie\";\r\n\r\nexport default function Movie() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState(0);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const movieSearch = searchParams.get(\"query\");\r\n\r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSearchParams({ query: query });\r\n    setQuery(\"\");\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (!movieSearch) return;\r\n\r\n    async function renderSearchMovies() {\r\n      try {\r\n        setIsLoading(true);\r\n        const moviesResp = await searchMovie(movieSearch);\r\n        setMovies(moviesResp);\r\n      } catch (error) {\r\n        console.log(\"Ooops, something went wrong\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    renderSearchMovies();\r\n  }, [movieSearch]);\r\n\r\n  return (\r\n    <BackgroundImgNoMovie movies={movies}>\r\n      <Form action=\"\" onSubmit={onFormSubmit}>\r\n        <label htmlFor=\"\">\r\n          <Input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\r\n        </label>\r\n        <SearchIconBtn type=\"submit\">\r\n          <BtnContainer>\r\n            <FaSearch size={35} />\r\n          </BtnContainer>\r\n        </SearchIconBtn>\r\n      </Form>\r\n\r\n      {isLoading ? (\r\n        <SkeltonBox>\r\n          {[...new Array(20)].map((_, index) => (\r\n            <SkeletonHome key={index} />\r\n          ))}\r\n        </SkeltonBox>\r\n      ) : (\r\n        movies && <MovieGallery movies={movies} />\r\n      )}\r\n\r\n      {movies.length === 0 && <NoMovie />}\r\n    </BackgroundImgNoMovie>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n"],"names":["axios","BASE_URL","api_key","API_KEY","language","fetchTrendMovie","response","data","results","searchMovie","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getMovieTrailer","className","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","URL_POSTER","URL_BACKDROP","LOGO_URL","MovieList","styled","MovieItem","theme","boxsh","boxshpr","MovieImg","MovieTitle","MovieGallery","movies","isLoading","location","useLocation","Array","map","_","index","Skeleton","id","original_title","poster_path","title","to","state","from","src","alt","Form","colors","clAccent","Input","BtnContainer","bgPrimary","SearchIconBtn","clPrimary","SkeltonBox","BackgroundImgNoMovie","props","length","NoMovieContnet","NoMovie","Movie","useState","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","setIsLoading","movieSearch","get","useEffect","moviesResp","console","log","renderSearchMovies","action","onSubmit","e","preventDefault","htmlFor","type","name","value","onChange","currentTarget","toLowerCase","size"],"sourceRoot":""}